esphome:
  name: "esphuman-presence-01"
  

  includes:
    - ld2410_uart.h
  on_boot:
    priority: 600
    # ...
    then:
      - lambda: |-
          auto uart_component = static_cast<LD2410 *>(ld2410);
          uart_component->setNumbers(maxMovingDistanceRange, maxStillDistanceRange, noneDuration);

esp8266:
  board: d1_mini

# Enable logging
logger:
#  level: none
  baud_rate: 0 #disable logging over uart

api:

ota:

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

  ap:
    ssid: "LD2410 Fallback Hotspot"


 
captive_portal:
i2c:
  sda: GPIO4
  scl: GPIO5
  scan: true
  id: bus_a
  



  
  
  
  
  
uart:
  id: uart1
  tx_pin: TX
  rx_pin: RX
  baud_rate: 256000 # Change this according to your setting
  parity: NONE
  stop_bits: 1
#  debug:
#    direction: BOTH
#    dummy_receiver: false
#    after:
#      delimiter: [0xF8,0xF7,0xF6,0xF5]
      
custom_component:
  - lambda: |-
      return {new LD2410(id(uart1))};
    components:
      - id: ld2410
      
binary_sensor:
  - platform: custom
    lambda: |-
      auto uart_component = static_cast<LD2410 *>(ld2410);
      return {uart_component->hasTarget,uart_component->hasMovingTarget,uart_component->hasStillTarget,uart_component->lastCommandSuccess};
    binary_sensors:
      - name: "Has Target"
      - name: "Has Moving Target"
      - name: "Has Still Target"
      - name: "Last Command Success"
  
  - platform: gpio
    id: human_presence_1_motion
    pin: 
      number: GPIO16  #D0
      mode: INPUT_PULLDOWN
    name: "human_presence_1"
    device_class: presence
    
  - platform: gpio
    id: human_presence_1_PIR
    pin: GPIO12  #D6
    name: "human_presence_1_pir"
    device_class: motion
